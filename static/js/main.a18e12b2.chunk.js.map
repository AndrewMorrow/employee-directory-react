{"version":3,"sources":["context/employee/employeeContext.js","components/layout/Searchbar.js","components/layout/Header.js","context/types.js","context/employee/employeeReducer.js","components/employees/EmployeeItem.js","components/layout/Spinner.js","components/employees/Employees.js","components/layout/CarrotsBar.js","components/pages/Home.js","context/employee/EmployeeState.js","App.js","index.js"],"names":["employeeContext","createContext","Searchbar","useContext","EmployeeContext","clearFilter","filterEmployees","text","filtered","useRef","className","type","name","placeholder","ref","onChange","e","current","value","target","Header","style","backgroundColor","borderBottom","color","height","marginBottom","FILTER_EMPLOYEES","GET_EMPLOYEES","SET_LOADING","CLEAR_FILTER","SORT_EMPLOYEESDOB","SORT_EMPLOYEESNAME","SET_SORTEDNAME","state","action","employees","payload","loading","filter","employee","regex","RegExp","email","match","sortedName","sortedDOB","EmployeeItem","src","picture","thumbnail","first","last","cell","Date","dob","date","toLocaleDateString","Spinner","role","Employees","getEmployees","useEffect","length","map","login","uuid","CarrotsBar","sortEmployeesDOB","setSortedName","setSortedDOB","sortEmployeesName","useState","sortDOB","setSortDOB","sortName","setSortName","onClick","Home","EmployeeState","props","useReducer","EmployeeReducer","dispatch","a","setLoading","fetch","res","json","data","results","Provider","bool","sortedAge","sortAge","b","nameA","age","nameB","comparison","sort","sortNames","toUpperCase","children","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a18e12b2.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst employeeContext = createContext();\n\nexport default employeeContext;\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport EmployeeContext from \"../../context/employee/employeeContext\";\n\nconst Searchbar = () => {\n    const employeeContext = useContext(EmployeeContext);\n    const { clearFilter, filterEmployees, filtered } = employeeContext;\n    // const [text, setText] = useState(\"\");\n    const text = useRef(\"\");\n\n    // useEffect(() => {\n    //     // console.log(text);\n    //     if (filtered === null) {\n    //         // setText(\"\");\n    //         text.current.value = \"\";\n    //     }\n    // }, []);\n\n    const onChange = (e) => {\n        if (text.current.value !== \"\") {\n            filterEmployees(e.target.value);\n        } else {\n            clearFilter();\n        }\n    };\n\n    // const onChange = (e) => setText(e.target.value);\n\n    return (\n        <form className=\"d-flex justify-content-center mb-2\">\n            <input\n                type=\"text\"\n                name=\"text\"\n                placeholder=\"Search Employees...\"\n                ref={text}\n                onChange={onChange}\n            />\n        </form>\n    );\n};\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst Header = () => {\n    return (\n        <header\n            style={{\n                backgroundColor: \"blue\",\n                borderBottom: \"solid red\",\n                color: \"whitesmoke\",\n                height: \"4rem\",\n                marginBottom: \"1rem\",\n            }}\n        >\n            <div className=\"d-flex justify-content-center\">\n                Employee Directory\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                Filter by clicking the carrots or use the search bar.\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","export const FILTER_EMPLOYEES = \"FILTER_EMPLOYEES\";\nexport const GET_EMPLOYEES = \"SEARCH_EMPLOYEES\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\nexport const SORT_EMPLOYEESDOB = \"SORT_EMPLOYEESDOB\";\nexport const SORT_EMPLOYEESNAME = \"SORT_EMPLOYEESNAME\";\nexport const SET_SORTEDNAME = \"SET_SORTEDNAME\";\nexport const SET_SORTEDDOB = \"SET_SORTEDDOB\";\n","import {\n    GET_EMPLOYEES,\n    FILTER_EMPLOYEES,\n    SET_LOADING,\n    CLEAR_FILTER,\n    SET_SORTEDNAME,\n    SORT_EMPLOYEESDOB,\n    SORT_EMPLOYEESNAME,\n} from \"../types\";\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_EMPLOYEES:\n            return {\n                ...state,\n                employees: action.payload,\n                loading: false,\n            };\n        case FILTER_EMPLOYEES:\n            return {\n                ...state,\n                filtered: state.employees.filter((employee) => {\n                    const regex = new RegExp(`${action.payload}`, \"gi\");\n                    return employee.email.match(regex);\n                }),\n            };\n        case SORT_EMPLOYEESDOB:\n            return {\n                ...state,\n                employees: action.payload,\n            };\n        case SORT_EMPLOYEESNAME:\n            return {\n                ...state,\n                employees: action.payload,\n            };\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case SET_SORTEDNAME:\n            return {\n                ...state,\n                sortedName: !state.sortedName,\n            };\n        case SET_SORTEDNAME:\n            return {\n                ...state,\n                sortedDOB: !state.sortedDOB,\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null,\n            };\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport employeeReducer from \"../../context/employee/employeeReducer\";\nimport PropTypes from \"prop-types\";\n\nconst EmployeeItem = ({ employee }) => {\n    return (\n        <div className=\"container \">\n            <div className=\"row border-top border-2 border-bottom\">\n                <div className=\"d-flex justify-content-center col-1 mb-1 mt-1\">\n                    <img src={employee.picture.thumbnail}></img>\n                </div>\n                <div className=\"d-flex justify-content-center col-3\">\n                    {employee.name.first} {employee.name.last}\n                </div>\n                <div className=\"d-flex justify-content-center col-2\">\n                    {employee.cell}\n                </div>\n                <div className=\"d-flex justify-content-center col-4\">\n                    {employee.email}\n                </div>\n                <div className=\"d-flex justify-content-center col-2\">\n                    {new Date(employee.dob.date).toLocaleDateString()}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nEmployeeItem.propTypes = {\n    employee: PropTypes.object.isRequired,\n};\n\nexport default EmployeeItem;\n","import React from \"react\";\n\nconst Spinner = () => {\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-secondary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-success\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-danger\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-warning\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-info\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-light\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-dark\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Spinner;\n","import React, { useContext, useEffect } from \"react\";\nimport EmployeeItem from \"./EmployeeItem\";\nimport EmployeeContext from \"../../context/employee/employeeContext\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Employees = () => {\n    const employeeContext = useContext(EmployeeContext);\n\n    const { getEmployees, employees, loading, filtered } = employeeContext;\n\n    useEffect(() => {\n        getEmployees();\n        // eslint-disable-next-line\n    }, []);\n\n    if (employees !== null && employees.length === 0 && !loading) {\n        return <h4>No employees to display</h4>;\n    }\n\n    return (\n        <div>\n            {employees !== null && !loading ? (\n                <>\n                    {filtered !== null\n                        ? filtered.map((employee) => (\n                              <EmployeeItem\n                                  key={employee.login.uuid}\n                                  employee={employee}\n                              />\n                          ))\n                        : employees.map((employee) => (\n                              <EmployeeItem\n                                  key={employee.login.uuid}\n                                  employee={employee}\n                              />\n                          ))}\n                </>\n            ) : (\n                <Spinner />\n            )}\n        </div>\n    );\n};\n\nexport default Employees;\n","import React, { useContext, useState } from \"react\";\nimport { FaSortDown, FaSortUp, FaSort } from \"react-icons/fa\";\nimport EmployeeContext from \"../../context/employee/employeeContext\";\n\nconst CarrotsBar = () => {\n    const employeeContext = useContext(EmployeeContext);\n    const {\n        employees,\n        sortedName,\n        setSortedName,\n        sortedDOB,\n        setSortedDOB,\n        sortEmployeesDOB,\n        sortEmployeesName,\n    } = employeeContext;\n\n    const [sortDOB, setSortDOB] = useState(null);\n    const [sortName, setSortName] = useState(null);\n\n    const onNameSort = (e) => {\n        if (sortName === null) {\n            setSortName(true);\n            sortEmployeesName(true);\n        } else if (sortName) {\n            setSortName(false);\n            sortEmployeesName(false);\n        } else {\n            setSortName(true);\n            sortEmployeesName(true);\n        }\n    };\n\n    const onDOBSort = (e) => {\n        if (sortDOB === null) {\n            setSortDOB(true);\n            sortEmployeesDOB(true);\n        } else if (sortDOB) {\n            setSortDOB(false);\n            sortEmployeesDOB(false);\n        } else {\n            setSortDOB(true);\n            sortEmployeesDOB(true);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row border-top border-2 border-bottom \">\n                <div className=\"d-flex justify-content-center col-1\">Image</div>\n                <div className=\"d-flex justify-content-center col-3\">\n                    Name{\" \"}\n                    <span onClick={onNameSort}>\n                        {sortName === null && <FaSort />}\n                        {sortName && <FaSortDown />}\n                        {!sortName && sortName !== null && <FaSortUp />}\n                    </span>\n                </div>\n                <div className=\"d-flex justify-content-center col-2\">Phone</div>\n                <div className=\"d-flex justify-content-center col-4\">Email</div>\n                <div className=\"d-flex justify-content-center col-2\">\n                    DOB{\" \"}\n                    <span onClick={onDOBSort}>\n                        {sortDOB === null && <FaSort />}\n                        {sortDOB && <FaSortDown />}\n                        {!sortDOB && sortDOB !== null && <FaSortUp />}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CarrotsBar;\n","import React from \"react\";\nimport Searchbar from \"../layout/Searchbar\";\nimport Header from \"../layout/Header\";\nimport Employees from \"../employees/Employees\";\nimport CarrotsBar from \"../layout/CarrotsBar\";\n\nconst Home = () => {\n    return (\n        <>\n            <Header />\n            <Searchbar />\n            <CarrotsBar />\n            <Employees />\n        </>\n    );\n};\n\nexport default Home;\n","import React, { useReducer } from \"react\";\nimport EmployeeContext from \"./employeeContext\";\nimport EmployeeReducer from \"./employeeReducer\";\nimport {\n    GET_EMPLOYEES,\n    FILTER_EMPLOYEES,\n    SET_LOADING,\n    CLEAR_FILTER,\n    SORT_EMPLOYEESDOB,\n    SORT_EMPLOYEESNAME,\n    SET_SORTEDDOB,\n    SET_SORTEDNAME,\n} from \"../types\";\n\nconst EmployeeState = (props) => {\n    const initialState = {\n        employees: [],\n        employee: {},\n        loading: false,\n        filtered: null,\n        sortedName: null,\n        sortedDOB: null,\n    };\n\n    const [state, dispatch] = useReducer(EmployeeReducer, initialState);\n\n    // Get Employees from RandomAPI\n    const getEmployees = async () => {\n        setLoading();\n\n        const res = await fetch(\"https://randomuser.me/api/?results=10\");\n        const data = await res.json();\n\n        dispatch({\n            type: GET_EMPLOYEES,\n            payload: data.results,\n        });\n    };\n\n    // Search Employees with input field\n    const filterEmployees = (text) => {\n        // console.log(text);\n        dispatch({ type: FILTER_EMPLOYEES, payload: text });\n    };\n\n    // Sort employees name\n    const sortEmployeesName = (bool) => {\n        let sortedName;\n        const sortNames = (a, b) => {\n            const nameA = a.name.last.toUpperCase();\n            const nameB = b.name.last.toUpperCase();\n            let comparison = 0;\n            if (nameA > nameB) {\n                comparison = 1;\n            } else if (nameA < nameB) {\n                comparison = -1;\n            }\n            if (bool) {\n                return comparison;\n            } else if (!bool) {\n                return comparison * -1;\n            }\n        };\n\n        if (state.filtered === null) {\n            sortedName = state.employees.sort(sortNames);\n        } else {\n            sortedName = state.filtered.sort(sortNames);\n        }\n\n        dispatch({ type: SORT_EMPLOYEESNAME, payload: sortedName });\n    };\n\n    // Sort Employees by DOB\n    const sortEmployeesDOB = (bool) => {\n        let sortedAge;\n        const sortAge = (a, b) => {\n            const nameA = a.dob.age;\n            const nameB = b.dob.age;\n            let comparison = 0;\n            if (nameA > nameB) {\n                comparison = 1;\n            } else if (nameA < nameB) {\n                comparison = -1;\n            }\n            if (bool) {\n                return comparison;\n            } else if (!bool) {\n                return comparison * -1;\n            }\n        };\n\n        if (state.filtered === null) {\n            sortedAge = state.employees.sort(sortAge);\n        } else {\n            sortedAge = state.filtered.sort(sortAge);\n        }\n\n        dispatch({ type: SORT_EMPLOYEESDOB, payload: sortedAge });\n    };\n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n    // Set sortedName\n    const setSortedName = () => {\n        dispatch({ type: SET_SORTEDNAME });\n    };\n\n    // Set sortedDOB\n    const setSortedDOB = () => {\n        dispatch({ type: SET_SORTEDDOB });\n    };\n\n    return (\n        <EmployeeContext.Provider\n            value={{\n                employees: state.employees,\n                employee: state.employee,\n                loading: state.loading,\n                filtered: state.filtered,\n                sortedName: state.sortedName,\n                getEmployees,\n                filterEmployees,\n                clearFilter,\n                setLoading,\n                setSortedName,\n                setSortedDOB,\n                sortEmployeesDOB,\n                sortEmployeesName,\n                sortedDOB: state.sortedDOB,\n            }}\n        >\n            {props.children}\n        </EmployeeContext.Provider>\n    );\n};\n\nexport default EmployeeState;\n","import \"./App.css\";\nimport Home from \"./components/pages/Home\";\nimport EmployeeState from \"./context/employee/EmployeeState\";\n\nfunction App() {\n    return (\n        <EmployeeState>\n            <div className=\"container\">\n                <Home />\n            </div>\n        </EmployeeState>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}