{"version":3,"sources":["context/employee/employeeContext.js","components/layout/Searchbar.js","components/layout/Header.js","context/types.js","context/employee/employeeReducer.js","components/employees/EmployeeItem.js","components/layout/Spinner.js","components/employees/Employees.js","components/layout/CarrotsBar.js","components/pages/Home.js","context/employee/EmployeeState.js","App.js","index.js"],"names":["employeeContext","createContext","Searchbar","useContext","EmployeeContext","clearFilter","filterEmployees","text","filtered","useRef","className","type","name","placeholder","ref","onChange","e","current","value","target","Header","style","backgroundColor","borderBottom","color","height","marginBottom","FILTER_EMPLOYEES","GET_EMPLOYEES","SET_LOADING","CLEAR_FILTER","SORT_EMPLOYEESDOB","SORT_EMPLOYEESNAME","SET_SORTEDNAME","state","action","employees","payload","loading","filter","employee","regex","RegExp","email","match","sortedName","sortedDOB","EmployeeItem","src","picture","thumbnail","first","last","cell","Date","dob","date","toLocaleDateString","Spinner","role","Employees","getEmployees","useEffect","length","map","login","uuid","CarrotsBar","sortEmployeesDOB","setSortedName","setSortedDOB","sortEmployeesName","useState","sortDOB","setSortDOB","sortName","setSortName","onClick","Home","EmployeeState","props","useReducer","EmployeeReducer","dispatch","a","setLoading","fetch","res","json","data","results","Provider","bool","sortedAge","sort","b","nameA","age","nameB","comparison","toUpperCase","children","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca0ca90.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst employeeContext = createContext();\r\n\r\nexport default employeeContext;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport EmployeeContext from \"../../context/employee/employeeContext\";\r\n\r\nconst Searchbar = () => {\r\n    const employeeContext = useContext(EmployeeContext);\r\n    const { clearFilter, filterEmployees, filtered } = employeeContext;\r\n    // const [text, setText] = useState(\"\");\r\n    const text = useRef(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(text);\r\n    //     if (filtered === null) {\r\n    //         // setText(\"\");\r\n    //         text.current.value = \"\";\r\n    //     }\r\n    // }, []);\r\n\r\n    const onChange = (e) => {\r\n        if (text.current.value !== \"\") {\r\n            filterEmployees(e.target.value);\r\n        } else {\r\n            clearFilter();\r\n        }\r\n    };\r\n\r\n    // const onChange = (e) => setText(e.target.value);\r\n\r\n    return (\r\n        <form className=\"d-flex justify-content-center mb-2\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"text\"\r\n                placeholder=\"Search Employees...\"\r\n                ref={text}\r\n                onChange={onChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header\r\n            style={{\r\n                backgroundColor: \"blue\",\r\n                borderBottom: \"solid red\",\r\n                color: \"whitesmoke\",\r\n                height: \"4rem\",\r\n                marginBottom: \"1rem\",\r\n            }}\r\n        >\r\n            <div className=\"d-flex justify-content-center\">\r\n                Employee Directory\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                Filter by clicking the carrots or use the search bar.\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const FILTER_EMPLOYEES = \"FILTER_EMPLOYEES\";\r\nexport const GET_EMPLOYEES = \"SEARCH_EMPLOYEES\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const SORT_EMPLOYEESDOB = \"SORT_EMPLOYEESDOB\";\r\nexport const SORT_EMPLOYEESNAME = \"SORT_EMPLOYEESNAME\";\r\nexport const SET_SORTEDNAME = \"SET_SORTEDNAME\";\r\nexport const SET_SORTEDDOB = \"SET_SORTEDDOB\";\r\n","import {\r\n    GET_EMPLOYEES,\r\n    FILTER_EMPLOYEES,\r\n    SET_LOADING,\r\n    CLEAR_FILTER,\r\n    SET_SORTEDNAME,\r\n    SORT_EMPLOYEESDOB,\r\n    SORT_EMPLOYEESNAME,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                employees: action.payload,\r\n                loading: false,\r\n            };\r\n        case FILTER_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                filtered: state.employees.filter((employee) => {\r\n                    const regex = new RegExp(`${action.payload}`, \"gi\");\r\n                    return employee.email.match(regex);\r\n                }),\r\n            };\r\n        case SORT_EMPLOYEESDOB:\r\n            return {\r\n                ...state,\r\n                employees: action.payload,\r\n            };\r\n        case SORT_EMPLOYEESNAME:\r\n            return {\r\n                ...state,\r\n                employees: action.payload,\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_SORTEDNAME:\r\n            return {\r\n                ...state,\r\n                sortedName: !state.sortedName,\r\n            };\r\n        case SET_SORTEDNAME:\r\n            return {\r\n                ...state,\r\n                sortedDOB: !state.sortedDOB,\r\n            };\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport employeeReducer from \"../../context/employee/employeeReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EmployeeItem = ({ employee }) => {\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"row border-top border-2 border-bottom\">\r\n                <div className=\"d-flex justify-content-center col-1 mb-1 mt-1\">\r\n                    <img src={employee.picture.thumbnail}></img>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center col-3\">\r\n                    {employee.name.first} {employee.name.last}\r\n                </div>\r\n                <div className=\"d-flex justify-content-center col-2\">\r\n                    {employee.cell}\r\n                </div>\r\n                <div className=\"d-flex justify-content-center col-4\">\r\n                    {employee.email}\r\n                </div>\r\n                <div className=\"d-flex justify-content-center col-2\">\r\n                    {new Date(employee.dob.date).toLocaleDateString()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEmployeeItem.propTypes = {\r\n    employee: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EmployeeItem;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-secondary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-success\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-info\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-light\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport EmployeeItem from \"./EmployeeItem\";\r\nimport EmployeeContext from \"../../context/employee/employeeContext\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Employees = () => {\r\n    const employeeContext = useContext(EmployeeContext);\r\n\r\n    const { getEmployees, employees, loading, filtered } = employeeContext;\r\n\r\n    useEffect(() => {\r\n        getEmployees();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (employees !== null && employees.length === 0 && !loading) {\r\n        return <h4>No employees to display</h4>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {employees !== null && !loading ? (\r\n                <>\r\n                    {filtered !== null\r\n                        ? filtered.map((employee) => (\r\n                              <EmployeeItem\r\n                                  key={employee.login.uuid}\r\n                                  employee={employee}\r\n                              />\r\n                          ))\r\n                        : employees.map((employee) => (\r\n                              <EmployeeItem\r\n                                  key={employee.login.uuid}\r\n                                  employee={employee}\r\n                              />\r\n                          ))}\r\n                </>\r\n            ) : (\r\n                <Spinner />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { FaSortDown, FaSortUp, FaSort } from \"react-icons/fa\";\r\nimport EmployeeContext from \"../../context/employee/employeeContext\";\r\n\r\nconst CarrotsBar = () => {\r\n    const employeeContext = useContext(EmployeeContext);\r\n    const {\r\n        employees,\r\n        sortedName,\r\n        setSortedName,\r\n        sortedDOB,\r\n        setSortedDOB,\r\n        sortEmployeesDOB,\r\n        sortEmployeesName,\r\n    } = employeeContext;\r\n\r\n    const [sortDOB, setSortDOB] = useState(null);\r\n    const [sortName, setSortName] = useState(null);\r\n\r\n    const onNameSort = (e) => {\r\n        if (sortName === null) {\r\n            setSortName(true);\r\n            sortEmployeesName(true);\r\n        } else if (sortName) {\r\n            setSortName(false);\r\n            sortEmployeesName(false);\r\n        } else {\r\n            setSortName(true);\r\n            sortEmployeesName(true);\r\n        }\r\n    };\r\n\r\n    const onDOBSort = (e) => {\r\n        if (sortDOB === null) {\r\n            setSortDOB(true);\r\n            sortEmployeesDOB(true);\r\n        } else if (sortDOB) {\r\n            setSortDOB(false);\r\n            sortEmployeesDOB(false);\r\n        } else {\r\n            setSortDOB(true);\r\n            sortEmployeesDOB(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row border-top border-2 border-bottom \">\r\n                <div className=\"d-flex justify-content-center col-1\">Image</div>\r\n                <div className=\"d-flex justify-content-center col-3\">\r\n                    Name{\" \"}\r\n                    <span onClick={onNameSort}>\r\n                        {sortName === null && <FaSort />}\r\n                        {sortName && <FaSortDown />}\r\n                        {!sortName && sortName !== null && <FaSortUp />}\r\n                    </span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center col-2\">Phone</div>\r\n                <div className=\"d-flex justify-content-center col-4\">Email</div>\r\n                <div className=\"d-flex justify-content-center col-2\">\r\n                    DOB{\" \"}\r\n                    <span onClick={onDOBSort}>\r\n                        {sortDOB === null && <FaSort />}\r\n                        {sortDOB && <FaSortDown />}\r\n                        {!sortDOB && sortDOB !== null && <FaSortUp />}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarrotsBar;\r\n","import React from \"react\";\r\nimport Searchbar from \"../layout/Searchbar\";\r\nimport Header from \"../layout/Header\";\r\nimport Employees from \"../employees/Employees\";\r\nimport CarrotsBar from \"../layout/CarrotsBar\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Searchbar />\r\n            <CarrotsBar />\r\n            <Employees />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useReducer } from \"react\";\r\nimport EmployeeContext from \"./employeeContext\";\r\nimport EmployeeReducer from \"./employeeReducer\";\r\nimport {\r\n    GET_EMPLOYEES,\r\n    FILTER_EMPLOYEES,\r\n    SET_LOADING,\r\n    CLEAR_FILTER,\r\n    SORT_EMPLOYEESDOB,\r\n    SORT_EMPLOYEESNAME,\r\n    SET_SORTEDDOB,\r\n    SET_SORTEDNAME,\r\n} from \"../types\";\r\n\r\nconst EmployeeState = (props) => {\r\n    const initialState = {\r\n        employees: [],\r\n        employee: {},\r\n        loading: false,\r\n        filtered: null,\r\n        sortedName: null,\r\n        sortedDOB: null,\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(EmployeeReducer, initialState);\r\n\r\n    // Get Employees from RandomAPI\r\n    const getEmployees = async () => {\r\n        setLoading();\r\n\r\n        const res = await fetch(\"https://randomuser.me/api/?results=10\");\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_EMPLOYEES,\r\n            payload: data.results,\r\n        });\r\n    };\r\n\r\n    // Search Employees with input field\r\n    const filterEmployees = (text) => {\r\n        // console.log(text);\r\n        dispatch({ type: FILTER_EMPLOYEES, payload: text });\r\n    };\r\n\r\n    // Sort employees name\r\n    const sortEmployeesName = (bool) => {\r\n        const sortNames = (a, b) => {\r\n            const nameA = a.name.last.toUpperCase();\r\n            const nameB = b.name.last.toUpperCase();\r\n            let comparison = 0;\r\n            if (nameA > nameB) {\r\n                comparison = 1;\r\n            } else if (nameA < nameB) {\r\n                comparison = -1;\r\n            }\r\n            if (bool) {\r\n                return comparison;\r\n            } else if (!bool) {\r\n                return comparison * -1;\r\n            }\r\n        };\r\n\r\n        const sortedName = state.employees.sort(sortNames);\r\n\r\n        dispatch({ type: SORT_EMPLOYEESNAME, payload: sortedName });\r\n    };\r\n\r\n    // Sort Employees by DOB\r\n    const sortEmployeesDOB = (bool) => {\r\n        const sortAge = (a, b) => {\r\n            const nameA = a.dob.age;\r\n            const nameB = b.dob.age;\r\n            let comparison = 0;\r\n            if (nameA > nameB) {\r\n                comparison = 1;\r\n            } else if (nameA < nameB) {\r\n                comparison = -1;\r\n            }\r\n            if (bool) {\r\n                return comparison;\r\n            } else if (!bool) {\r\n                return comparison * -1;\r\n            }\r\n        };\r\n\r\n        const sortedAge = state.employees.sort(sortAge);\r\n\r\n        dispatch({ type: SORT_EMPLOYEESDOB, payload: sortedAge });\r\n    };\r\n\r\n    // Set Loading\r\n    const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    };\r\n\r\n    // Set sortedName\r\n    const setSortedName = () => {\r\n        dispatch({ type: SET_SORTEDNAME });\r\n    };\r\n\r\n    // Set sortedDOB\r\n    const setSortedDOB = () => {\r\n        dispatch({ type: SET_SORTEDDOB });\r\n    };\r\n\r\n    return (\r\n        <EmployeeContext.Provider\r\n            value={{\r\n                employees: state.employees,\r\n                employee: state.employee,\r\n                loading: state.loading,\r\n                filtered: state.filtered,\r\n                sortedName: state.sortedName,\r\n                getEmployees,\r\n                filterEmployees,\r\n                clearFilter,\r\n                setLoading,\r\n                setSortedName,\r\n                setSortedDOB,\r\n                sortEmployeesDOB,\r\n                sortEmployeesName,\r\n                sortedDOB: state.sortedDOB,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmployeeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default EmployeeState;\r\n","import \"./App.css\";\nimport Home from \"./components/pages/Home\";\nimport EmployeeState from \"./context/employee/EmployeeState\";\n\nfunction App() {\n    return (\n        <EmployeeState>\n            <div className=\"container\">\n                <Home />\n            </div>\n        </EmployeeState>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}